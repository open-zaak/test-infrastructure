---

apiVersion: v1
kind: Namespace
metadata:
  name: mocks

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: mocks
data:
  default.conf: |
    server {
        listen       80 default_server;
        server_name  _;

        location /200 {
            add_header Content-Type text/html;
            return 200;
        }

        location /204 {
            add_header Content-Type application/json;
            return 204;
        }

        location /404 {
            add_header Content-Type text/html;
            return 404 "";
        }
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: webserver
    app.kubernetes.io/instance: test
    app.kubernetes.io/name: nginx
    app.kubernetes.io/part-of: mocks
  name: nginx
  namespace: mocks
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: test
      app.kubernetes.io/name: nginx
      app.kubernetes.io/part-of: mocks
  template:
    metadata:
      name: nginx
      labels:
        app.kubernetes.io/component: webserver
        app.kubernetes.io/instance: test
        app.kubernetes.io/name: nginx
        app.kubernetes.io/part-of: mocks
    spec:
      containers:
      - name: nginx
        image: nginx:1.17
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 50m
            memory: 10Mi
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/
          name: nginx-config
      volumes:
      - configMap:
          name: nginx
        name: nginx-config

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webserver
    app.kubernetes.io/instance: test
    app.kubernetes.io/name: nginx
    app.kubernetes.io/part-of: mocks
  name: nginx
  namespace: mocks
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/instance: test
    app.kubernetes.io/name: nginx
    app.kubernetes.io/part-of: mocks
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
